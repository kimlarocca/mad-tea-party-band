{"version":3,"sources":["main.js"],"names":["$","document","ready","click","toggleClass","removeClass","offset","top","window","scroll","scrollTop","addClass","camera","scene","renderer","geometry","material","mesh","init","animate","clock","THREE","Clock","WebGLRenderer","alpha","setClearColor","setSize","innerWidth","innerHeight","Scene","ambientLight","AmbientLight","add","PerspectiveCamera","position","z","CubeGeometry","MeshLambertMaterial","color","wireframe","Mesh","cubeSineDriver","smokeTexture","ImageUtils","loadTexture","smokeMaterial","opacity","map","transparent","smokeGeo","PlaneGeometry","smokeParticles","p","particle","set","Math","random","rotation","push","getElementById","appendChild","domElement","delta","getDelta","requestAnimationFrame","evolveSmoke","render","sp","length","x","y","sin","not","event","location","pathname","replace","hostname","target","hash","slice","preventDefault","$target","focus","is","attr"],"mappings":"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","file":"main.js","sourcesContent":["$(document).ready(function () {\n    //navigation\n    $('#trigger').click(function () {\n        $('#menu').toggleClass('open');\n        $('#trigger').toggleClass('open');\n    });\n    $('.nav-link').click(function () {\n        $('#menu').removeClass('open');\n        $('#trigger').removeClass('open');\n    });\n\n    //change hamburger menu color on scroll\n    var offset = $('#what').offset().top;\n    $(function () {\n        $(window).scroll(function () {\n            if ($(window).scrollTop() >= offset) {\n                $('#trigger').addClass('black');\n            } else {\n                $('#trigger').removeClass('black');\n            }\n        });\n    });\n\n    //smoke effect\n    var camera, scene, renderer, geometry, material, mesh;\n\n    init();\n    animate();\n\n    function init() {\n        clock = new THREE.Clock();\n\n        renderer = new THREE.WebGLRenderer({alpha: true});\n        renderer.setClearColor(0x000000, .1);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        scene = new THREE.Scene();\n\n        var ambientLight = new THREE.AmbientLight(0xffffff);\n        scene.add(ambientLight);\n\n        camera = new THREE.PerspectiveCamera(\n            75,\n            window.innerWidth / window.innerHeight,\n            1,\n            10000\n        );\n        camera.position.z = 1000;\n        scene.add(camera);\n\n        geometry = new THREE.CubeGeometry(200, 200, 200);\n        material = new THREE.MeshLambertMaterial({\n            color: 0xf8cb8a,\n            wireframe: false\n        });\n        mesh = new THREE.Mesh(geometry, material);\n        //scene.add( mesh );\n        cubeSineDriver = 0;\n        smokeTexture = THREE.ImageUtils.loadTexture(\n            'http://kimlarocca.test/images/smoke.png'\n        );\n        smokeMaterial = new THREE.MeshLambertMaterial({\n            color: 0xf8cb8a,\n            opacity: 0.1,\n            map: smokeTexture,\n            transparent: true\n        });\n        smokeGeo = new THREE.PlaneGeometry(300, 300);\n        smokeParticles = [];\n\n        for (p = 0; p < 150; p++) {\n            var particle = new THREE.Mesh(smokeGeo, smokeMaterial);\n            particle.position.set(\n                Math.random() * 500 - 250,\n                Math.random() * 500 - 250,\n                Math.random() * 1000 - 100\n            );\n            particle.rotation.z = Math.random() * 360;\n            scene.add(particle);\n            smokeParticles.push(particle);\n        }\n\n        document.getElementById('smoke').appendChild(renderer.domElement);\n    }\n\n    function animate() {\n        delta = clock.getDelta();\n        requestAnimationFrame(animate);\n        evolveSmoke();\n        render();\n    }\n\n    function evolveSmoke() {\n        var sp = smokeParticles.length;\n        while (sp--) {\n            smokeParticles[sp].rotation.z += delta * 0.2;\n        }\n    }\n\n    function render() {\n        mesh.rotation.x += 0.005;\n        mesh.rotation.y += 0.01;\n        cubeSineDriver += 0.01;\n        mesh.position.z = 100 + Math.sin(cubeSineDriver) * 500;\n        renderer.render(scene, camera);\n    }\n\n    // Smooth scroll to anchor links\n    $('a[href*=\"#\"]')\n    // Remove links that don't actually link to anything\n        .not('[href=\"#\"]').not('[href=\"#0\"]').click(function (event) {\n        // On-page links\n        if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n            // Figure out element to scroll to\n            var target = $(this.hash);\n            target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n            // Does a scroll target exist?\n            if (target.length) {\n                // Only prevent default if animation is actually gonna happen\n                event.preventDefault();\n                $('html, body').animate({\n                    scrollTop: target.offset().top\n                }, 1000, function () {\n                    // Callback after animation\n                    // Must change focus!\n                    var $target = $(target);\n                    $target.focus();\n                    if ($target.is(':focus')) {\n                        // Checking if the target was focused\n                        return false;\n                    } else {\n                        $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable\n                        $target.focus(); // Set focus again\n                    }\n                });\n            }\n        }\n    });\n});"]}